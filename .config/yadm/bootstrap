#!/bin/bash

set -e
set -x

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  if [ -f "$HOME/.Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew bundle --global
  fi

  # Migrate from fasd to zoxide if needed
  if command -v zoxide >/dev/null 2>&1 && [ -f "$HOME/.fasd" ] && [ ! -f "$HOME/.zoxide_migrated" ]; then
    echo "Migrating from fasd to zoxide"
    if [ -x "$HOME/bin/migrate-fasd-to-zoxide.sh" ]; then
      "$HOME/bin/migrate-fasd-to-zoxide.sh"
      touch "$HOME/.zoxide_migrated"
    fi
  fi

  # Setup fzf key bindings and fuzzy completion
  if command -v fzf >/dev/null 2>&1 && ! [ -f "$HOME/.fzf.zsh" ]; then
    echo "Setting up fzf shell integration"
    $(brew --prefix)/opt/fzf/install --key-bindings --completion --no-update-rc
  fi

  if [ ! -f "$HOME/.iterm2_shell_integration.zsh" ]; then
    curl -L https://iterm2.com/shell_integration/zsh \
      -o ~/.iterm2_shell_integration.zsh
  fi

  if [[ $(sysctl -n machdep.cpu.brand_string) =~ "Apple" ]]; then
    softwareupdate --install-rosetta --agree-to-license
  fi

elif [ "$system_type" = "Linux" ]; then
  
  if ! command -v zsh >/dev/null 2>&1; then
    echo 'Install zsh first'
    exit 1
  fi

  sudo apt-get update
  sudo apt-get install -y \
    fasd \
    python3-pip \
    curl \
    wget \
    jq \
    tree \
    silversearcher-ag \
    bat \
    direnv \
    fzf

  if ! command -v jenv >/dev/null 2>&1; then
    echo "Setting up jenv"
    if [ -d "$HOME/.jenv" ]; then
      echo "jenv directory exists, updating instead of installing"
      if [ -d "$HOME/.jenv/.git" ]; then
        git -C "$HOME/.jenv" pull --ff-only
      else
        echo "Warning: $HOME/.jenv exists but is not a git repo. Renaming and reinstalling"
        mv "$HOME/.jenv" "$HOME/.jenv.bak.$(date +%Y%m%d%H%M%S)"
        git clone https://github.com/jenv/jenv.git "$HOME/.jenv"
      fi
    else
      git clone https://github.com/jenv/jenv.git "$HOME/.jenv"
    fi
    
    # Ensure jenv is in PATH for this session
    export PATH="$HOME/.jenv/bin:$PATH"
    eval "$(jenv init -)"
  fi

  # Install Coursier if not available
  if ! command -v coursier >/dev/null 2>&1; then
    echo "Installing Coursier"

    curl -fLo coursier https://github.com/coursier/launchers/raw/master/coursier &&
    chmod +x coursier
    
    ./coursier setup --yes
        
    export PATH="$PATH:$HOME/.local/share/coursier/bin"
  fi

fi

if [ ! -f "$HOME/.oh-my-zsh/README.md" ]; then
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
fi

powerlevel10k_dir=${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
if [ ! -d $powerlevel10k_dir ]; then
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git $powerlevel10k_dir
else
  git -C $powerlevel10k_dir pull --ff-only
fi

zsh_aliases_exa_dir=${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-aliases-exa
if [ ! -f $zsh_aliases_exa_dir/zsh-aliases-exa.plugin.zsh ]; then
  git clone --no-checkout https://github.com/DarrinTisdale/zsh-aliases-exa.git $zsh_aliases_exa_dir
  git -c advice.detachedHead=false -C $zsh_aliases_exa_dir checkout f6b72da193f03911009cb95e3e2e18e48b918833
fi

coursier java-home --jvm 19 | xargs jenv add
coursier java-home --jvm 11 | xargs jenv add
coursier install scala-cli
coursier install coursier
coursier install scala
coursier install scalac
coursier install sbt
coursier install giter8
coursier install scala3
coursier install scalafix
coursier install --contrib plantuml

if [ ! -d $(pyenv root)/versions/2.7.18 ]; then
  pyenv install 2.7.18
fi

pipx install cfv toms

NPM_PACKAGES_DIR="${HOME}/.npm-packages"
[ -d "$NPM_PACKAGES_DIR" ] || mkdir "$NPM_PACKAGES_DIR"

